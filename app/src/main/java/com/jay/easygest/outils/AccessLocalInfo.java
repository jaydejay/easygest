package com.jay.easygest.outils;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import com.jay.easygest.model.AccountModel;import com.jay.easygest.model.CreditModel;import com.jay.easygest.model.InfosModel;import java.util.ArrayList;public class AccessLocalInfo {    private final MySqliteOpenHelper accessBD;    private SQLiteDatabase bd;    public AccessLocalInfo(Context contexte) {        this.accessBD = new MySqliteOpenHelper(contexte,null);    }    public void updateCreditInfos(Integer sommeversee){        InfosModel info = this.getInfo();        bd = accessBD.getWritableDatabase();        try{            ContentValues infos_cv = new ContentValues();            infos_cv.put("nbrcredit",info.getNbrcredit()+1);            infos_cv.put("totalcredit",info.getTotalcredit()+sommeversee);            bd.update("infos",infos_cv,"appnumber = ?", new String[] {String.valueOf(info.getAppnumber())});        } catch (Exception e) {            throw new RuntimeException(e);        }    }    public void modifierCreditInfos(Integer sommeversee){        InfosModel info = this.getInfo();        bd = accessBD.getWritableDatabase();        try{            ContentValues infos_cv = new ContentValues();            infos_cv.put("totalcredit",info.getTotalcredit()+sommeversee);            bd.update("infos",infos_cv,"appnumber = ?", new String[] {String.valueOf(info.getAppnumber())});        } catch (Exception e) {            throw new RuntimeException(e);        }    }    public void annullerCreditInfos(CreditModel credit){        InfosModel info = this.getInfo();        bd = accessBD.getWritableDatabase();        try{            ContentValues infos_cv = new ContentValues();            infos_cv.put("nbrcredit",info.getNbrcredit()-1);            infos_cv.put("totalcredit",info.getTotalcredit()-credit.getSommecredit());            bd.update("infos",infos_cv,"appnumber = ?", new String[] {String.valueOf(info.getAppnumber())});        } catch (Exception e) {            throw new RuntimeException(e);        }    }    public void updateAccountInfos(Integer sommeversee){        InfosModel info = this.getInfo();        bd = accessBD.getWritableDatabase();        try{            ContentValues infos_cv = new ContentValues();            infos_cv.put("nbraccount",info.getNbraccount()+1);            infos_cv.put("totalaccount",info.getTotalaccount()+sommeversee);            bd.update("infos",infos_cv,"appnumber = ?", new String[] {String.valueOf(info.getAppnumber())});        } catch (Exception e) {            throw new RuntimeException(e);        }    }    public void modifierAccountInfos(Integer sommeversee){        InfosModel info = this.getInfo();        bd = accessBD.getWritableDatabase();        try{            ContentValues infos_cv = new ContentValues();            infos_cv.put("totalaccount",info.getTotalaccount()+sommeversee);            bd.update("infos",infos_cv,"appnumber = ?", new String[] {String.valueOf(info.getAppnumber())});        } catch (Exception e) {            throw new RuntimeException(e);        }    }    public void annullerAccountInfos(AccountModel account){        InfosModel info = this.getInfo();        bd = accessBD.getWritableDatabase();        try{            ContentValues infos_cv = new ContentValues();            infos_cv.put("nbraccount",info.getNbraccount()-1);            infos_cv.put("totalaccount",info.getTotalaccount()-account.getSommeaccount());            bd.update("infos",infos_cv,"appnumber = ?", new String[] {String.valueOf(info.getAppnumber())});        } catch (Exception e) {            throw new RuntimeException(e);        }    }    public InfosModel getInfo(){        ArrayList<InfosModel> _infos = new ArrayList<>();        InfosModel info;        try {            bd = accessBD.getReadableDatabase();            String req = "select * from infos";            Cursor cursor = bd.rawQuery(req, null);            cursor.moveToFirst();            do {                InfosModel infosModel = new InfosModel(cursor.getInt(0), cursor.getInt(1), cursor.getInt(2), cursor.getInt(3) , cursor.getInt(4));                _infos.add(infosModel);            }            while (cursor.moveToNext());            cursor.close();             info = _infos.get(0);        }catch(Exception e){             info = null;        }        return info;    }}